module block

def implicit_yield yield
    puts "%s" % "Hello", end => " "
    yield

def test
    implicit_yield do:
        puts "world"

def count yield n
    yield n

def test_count
    3.times do n:
        puts n

__END__

-module('block').

implicit_yield(Yield)->
    rice:call('puts', [rice:'%'({string, "%s"}, [{string, "Hello"}])], [{'end', {string, " "}}]),
    rice:call(Yield).

test()->
    implicit_yield(fun()->
        rice:call('puts', [{string, "world"}])
    end).

count(Yield, N)->
    rice:call(Yield, [N]).

test_count()->
    rice:call({3, 'times'}, [fun(N)->
        rice:call('puts', [N])
    end]).
